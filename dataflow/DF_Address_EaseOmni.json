{
	"name": "DF_Address_EaseOmni",
	"properties": {
		"folder": {
			"name": "MDM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable_EASEOMNI_VIPS_STG0",
						"type": "DatasetReference"
					},
					"name": "source1EaseOmni"
				},
				{
					"dataset": {
						"referenceName": "DS_EASE_ADDRESS_TGT",
						"type": "DatasetReference"
					},
					"name": "TgtPersonAddromni"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_EASE_ADDRESS_SINK",
						"type": "DatasetReference"
					},
					"name": "PersonaddressInsert"
				},
				{
					"dataset": {
						"referenceName": "DS_EASE_ADDRESS_SINK",
						"type": "DatasetReference"
					},
					"name": "personaddrinsert1"
				},
				{
					"dataset": {
						"referenceName": "DS_EASE_ADDRESS_SINK",
						"type": "DatasetReference"
					},
					"name": "PersonAddrUpdate"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "SourceDeleteInd"
				},
				{
					"name": "Insert"
				},
				{
					"name": "split5"
				},
				{
					"name": "notexists4"
				},
				{
					"name": "exists6"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "split8"
				},
				{
					"name": "notexists7"
				},
				{
					"name": "split9"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "exists11"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "alterRow4"
				}
			],
			"script": "source(output(\n\t\tSOURCE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tBATCH_ID as string,\n\t\tPART_TIN as string,\n\t\tPART_BIRTH_DATE as string,\n\t\tPART_GENDER as string,\n\t\tPART_ACCOUNT_STATUS as string,\n\t\tPART_TYPE as string,\n\t\tPART_MARITAL_STATUS as string,\n\t\tPART_FULL_NAME as string,\n\t\tPART_FIRST_NAME as string,\n\t\tPART_LAST_NAME as string,\n\t\tPART_MIDDLE_NAME as string,\n\t\tPART_SUFFIX_TITLE as string,\n\t\tPART_ADDRESS_LINE1 as string,\n\t\tPART_ADDRESS_LINE2 as string,\n\t\tPART_ADDRESS_LINE3 as string,\n\t\tPART_CITY as string,\n\t\tPART_STATE as string,\n\t\tPART_POSTAL_CODE as string,\n\t\tPART_POSTAL_CODE5 as string,\n\t\tPART_COUNTRY as string,\n\t\tPART_COUNTRY_CD as string,\n\t\tPART_EMAIL as string,\n\t\tPART_PHONE as string,\n\t\tCHANGE_CODE as string,\n\t\tPERSON_CHECK_SUM as string,\n\t\tPERADDR_CHECK_SUM as string,\n\t\tPERSONIDENT_CHECK_SUM as string,\n\t\tPERCONT_P_PH_CHECK_SUM as string,\n\t\tPERCONT_P_EMAIL_CHECK_SUM as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT SOURCE_KEY,SOURCE_SYSTEM,BATCH_ID,PART_TIN,PART_BIRTH_DATE,PART_GENDER,PART_ACCOUNT_STATUS,PART_TYPE,PART_MARITAL_STATUS,PART_FULL_NAME,PART_FIRST_NAME,PART_LAST_NAME,PART_MIDDLE_NAME,\\nPART_SUFFIX_TITLE,PART_ADDRESS_LINE1,PART_ADDRESS_LINE2,PART_ADDRESS_LINE3,PART_CITY,PART_STATE,PART_POSTAL_CODE,SUBSTRING(PART_POSTAL_CODE,1,5) PART_POSTAL_CODE5,PART_COUNTRY,CASE WHEN TRIM(PART_COUNTRY) = \\'UNITED STATES\\' THEN \\'US\\' ELSE TRIM(PART_COUNTRY) END AS PART_COUNTRY_CD, \\nPART_EMAIL,PART_PHONE,CHANGE_CODE , \\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_TIN,\\'1\\')+ISNULL(PART_FULL_NAME,\\'2\\')+ISNULL(PART_FIRST_NAME,\\'3\\')+ISNULL(PART_MIDDLE_NAME,\\'4\\')+ISNULL(PART_LAST_NAME,\\'5\\')+ISNULL(PART_SUFFIX_TITLE,\\'6\\')+ISNULL(PART_GENDER,\\'7\\')+\\nISNULL(PART_BIRTH_DATE,\\'8\\')+ISNULL(PART_ADDRESS_LINE1,\\'9\\')+ISNULL(PART_ADDRESS_LINE2,\\'10\\') +ISNULL(PART_ADDRESS_LINE3,\\'11\\')+ISNULL(PART_CITY,\\'12\\')+ISNULL(PART_STATE,\\'13\\')+ISNULL(PART_POSTAL_CODE,\\'14\\')+ISNULL(PART_COUNTRY,\\'15\\')+\\nISNULL(PART_EMAIL,\\'16\\')+ISNULL(PART_PHONE,\\'17\\')+ISNULL(PART_TYPE,\\'18\\')+ISNULL(PART_MARITAL_STATUS,\\'19\\') ),2) PERSON_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_ADDRESS_LINE1,\\'1\\')+ISNULL(PART_ADDRESS_LINE2,\\'2\\') +ISNULL(PART_ADDRESS_LINE3,\\'3\\')+ISNULL(PART_CITY,\\'4\\')+ISNULL(PART_STATE,\\'5\\')+ISNULL(PART_POSTAL_CODE,\\'6\\')+ISNULL(PART_COUNTRY,\\'7\\')),2) PERADDR_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_TIN ,\\'1\\')),2) PERSONIDENT_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_PHONE,\\'1\\')+\\'PERSONAL\\'+\\'PHONE\\'),2) PERCONT_P_PH_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_EMAIL,\\'1\\')+\\'PERSONAL\\'+\\'EMAIL\\'),2) PERCONT_P_EMAIL_CHECK_SUM\\nFROM CMDM_STAGE.RS_SOMNI_DC_PARTICIPANT_DAILY_DELTA_STG',\n\tformat: 'query') ~> source1EaseOmni\nsource(output(\n\t\taddressType as string,\n\t\tstreetAddress as string,\n\t\taddressLine1 as string,\n\t\taddressLine2 as string,\n\t\taddressLine3 as string,\n\t\tcityName as string,\n\t\tstateCD as string,\n\t\tpostalCode as string,\n\t\tpoBox as string,\n\t\tmailBoxNumber as string,\n\t\tcountryCD as string,\n\t\tpostalCode5 as string,\n\t\tsrcPersonPkey as string,\n\t\tsourceSystem as string,\n\t\tsrcAddressPkey as string,\n\t\tprimaryFlag as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tSourceCreateDateTime as timestamp,\n\t\tcountyName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from [CMDM_STAGE].[PersonAddress] where sourceSystem=\\'SUPEROMNI\\'',\n\tformat: 'query') ~> TgtPersonAddromni\nSourceDeleteInd derive(row_status = 'A',\n\t\tprimaryflag = 'Y',\n\t\tLastupdatetime = currentTimestamp(),\n\t\tcreatedttime = currentTimestamp(),\n\t\tcreatedBy = 'MYV_EASE_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tlastUpdatedBy = 'MYV_EASE_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\taddressType = 'HOME',\n\t\tsourcecreatedateTime = 'NULL',\n\t\tsourcelastUpdatetime = 'NULL') ~> derivedColumn1\nnotexists4 derive(SourceDeletedInd = 'N') ~> SourceDeleteInd\nderivedColumn1 alterRow(insertIf(true())) ~> Insert\nsource1EaseOmni split(CHANGE_CODE=='NEW',\n\tCHANGE_CODE=='UPDATE',\n\tdisjoint: true) ~> split5@(if2, if1)\nsplit5@if2, TgtPersonAddromni exists((SOURCE_KEY == srcPersonPkey\n && SOURCE_SYSTEM == sourceSystem && row_status == 'A' && addressType == 'HOME'),\n\tnegate:true,\n\tbroadcast: 'auto')~> notexists4\nsplit5@if1, TgtPersonAddromni exists((SOURCE_KEY == srcPersonPkey\n && SOURCE_SYSTEM == sourceSystem && row_status == 'A' && addressType == 'HOME'),\n\tnegate:false,\n\tbroadcast: 'auto')~> exists6\nsplit9@insert1 derive(addresstype = 'HOME',\n\t\tRowStatus = 'A',\n\t\tprimaryflag = 'Y',\n\t\tcreatedateTime = currentTimestamp(),\n\t\tlastupdateddatatime = currentTimestamp(),\n\t\tcreatedby = 'MYV_EASE_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tlastupdatedBy = 'MYV_EASE_OMNI_STG_TO_COMMON_UPD_LOAD',\n\t\tsourcecreatedateTime = 'NULL',\n\t\tsourcelastUpdateTime = 'NULL') ~> derivedColumn4\nexists6 split(CHANGE_CODE=='UPDATE'||CHANGE_CODE=='NEW',\n\tdisjoint: false) ~> split8@(ifNeworUpdate)\nsplit8@ifNeworUpdate, TgtPersonAddromni exists(PERADDR_CHECK_SUM  == check_sum,\n\tnegate:true,\n\tbroadcast: 'auto')~> notexists7\nnotexists7 split(CHANGE_CODE=='NEW'||CHANGE_CODE=='UPDATE',\n\tCHANGE_CODE=='NEW'||CHANGE_CODE=='UPDATE',\n\tdisjoint: true) ~> split9@(update1, insert1)\nderivedColumn4 alterRow(insertIf(true())) ~> alterRow1\nTgtPersonAddromni, split9@update1 exists(SOURCE_KEY==srcPersonPkey,\n\tnegate:false,\n\tbroadcast: 'auto')~> exists11\nexists11 derive(ROw_status = 'I',\n\t\tlastupdatetime = currentTimestamp(),\n\t\tupdatedby = 'MYV_OMNI_STG_TO_COMMON_UPDT_LOAD') ~> derivedColumn7\nderivedColumn7 alterRow(updateIf(true())) ~> alterRow4\nInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\taddressType as string,\n\t\tstreetAddress as string,\n\t\taddressLine1 as string,\n\t\taddressLine2 as string,\n\t\taddressLine3 as string,\n\t\tcityName as string,\n\t\tstateCD as string,\n\t\tpostalCode as string,\n\t\tpoBox as string,\n\t\tmailBoxNumber as string,\n\t\tcountryCD as string,\n\t\tpostalCode5 as string,\n\t\tsrcPersonPkey as string,\n\t\tsourceSystem as string,\n\t\tsrcAddressPkey as string,\n\t\tprimaryFlag as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tSourceCreateDateTime as timestamp,\n\t\tcountyName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\taddressType,\n\t\taddressLine1 = PART_ADDRESS_LINE1,\n\t\taddressLine2 = PART_ADDRESS_LINE2,\n\t\taddressLine3 = PART_ADDRESS_LINE3,\n\t\tcityName = PART_CITY,\n\t\tstateCD = PART_STATE,\n\t\tpostalCode = PART_POSTAL_CODE,\n\t\tcountryCD = PART_COUNTRY_CD,\n\t\tpostalCode5 = PART_POSTAL_CODE5,\n\t\tsrcPersonPkey = SOURCE_KEY,\n\t\tsourceSystem = SOURCE_SYSTEM,\n\t\tprimaryFlag = primaryflag,\n\t\trow_status,\n\t\tbatch_id = BATCH_ID,\n\t\tcheck_sum = PERADDR_CHECK_SUM,\n\t\tcreateDateTime = createdttime,\n\t\tcreatedBy,\n\t\tlastUpdateDateTime = Lastupdatetime,\n\t\tlastUpdatedBy,\n\t\tSourceLastUpdateDateTime = sourcelastUpdatetime,\n\t\tSourceCreateDateTime = sourcecreatedateTime,\n\t\tcountyName = PART_COUNTRY\n\t)) ~> PersonaddressInsert\nalterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\taddressType as string,\n\t\tstreetAddress as string,\n\t\taddressLine1 as string,\n\t\taddressLine2 as string,\n\t\taddressLine3 as string,\n\t\tcityName as string,\n\t\tstateCD as string,\n\t\tpostalCode as string,\n\t\tpoBox as string,\n\t\tmailBoxNumber as string,\n\t\tcountryCD as string,\n\t\tpostalCode5 as string,\n\t\tsrcPersonPkey as string,\n\t\tsourceSystem as string,\n\t\tsrcAddressPkey as string,\n\t\tprimaryFlag as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tSourceCreateDateTime as timestamp,\n\t\tcountyName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\taddressType = addresstype,\n\t\taddressLine1 = PART_ADDRESS_LINE1,\n\t\taddressLine2 = PART_ADDRESS_LINE2,\n\t\taddressLine3 = PART_ADDRESS_LINE3,\n\t\tcityName = PART_CITY,\n\t\tstateCD = PART_STATE,\n\t\tpostalCode = PART_POSTAL_CODE,\n\t\tcountryCD = PART_COUNTRY_CD,\n\t\tpostalCode5 = PART_POSTAL_CODE5,\n\t\tsrcPersonPkey = SOURCE_KEY,\n\t\tsourceSystem = SOURCE_SYSTEM,\n\t\tprimaryFlag = primaryflag,\n\t\trow_status = RowStatus,\n\t\tbatch_id = BATCH_ID,\n\t\tcheck_sum = PERADDR_CHECK_SUM,\n\t\tcreateDateTime = createdateTime,\n\t\tcreatedBy = createdby,\n\t\tlastUpdateDateTime = lastupdatedBy,\n\t\tlastUpdatedBy = lastupdatedBy,\n\t\tSourceLastUpdateDateTime = sourcelastUpdateTime,\n\t\tSourceCreateDateTime = sourcecreatedateTime,\n\t\tcountyName = PART_COUNTRY\n\t)) ~> personaddrinsert1\nalterRow4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\taddressType as string,\n\t\tstreetAddress as string,\n\t\taddressLine1 as string,\n\t\taddressLine2 as string,\n\t\taddressLine3 as string,\n\t\tcityName as string,\n\t\tstateCD as string,\n\t\tpostalCode as string,\n\t\tpoBox as string,\n\t\tmailBoxNumber as string,\n\t\tcountryCD as string,\n\t\tpostalCode5 as string,\n\t\tsrcPersonPkey as string,\n\t\tsourceSystem as string,\n\t\tsrcAddressPkey as string,\n\t\tprimaryFlag as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tSourceCreateDateTime as timestamp,\n\t\tcountyName as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['srcPersonPkey','batch_id'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\taddressType,\n\t\tstreetAddress,\n\t\taddressLine1,\n\t\taddressLine2,\n\t\taddressLine3,\n\t\tcityName,\n\t\tstateCD,\n\t\tpostalCode,\n\t\tpoBox,\n\t\tmailBoxNumber,\n\t\tcountryCD,\n\t\tpostalCode5,\n\t\tsrcPersonPkey,\n\t\tsourceSystem,\n\t\tsrcAddressPkey,\n\t\tprimaryFlag,\n\t\trow_status = derivedColumn7@ROw_status,\n\t\tbatch_id,\n\t\tcheck_sum,\n\t\tcreateDateTime,\n\t\tcreatedBy,\n\t\tlastUpdateDateTime,\n\t\tlastUpdatedBy,\n\t\tSourceLastUpdateDateTime,\n\t\tSourceCreateDateTime,\n\t\tcountyName\n\t)) ~> PersonAddrUpdate"
		}
	}
}