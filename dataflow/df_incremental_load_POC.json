{
	"name": "df_incremental_load_POC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdatatable",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable7",
						"type": "DatasetReference"
					},
					"name": "empsqltable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable8",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable7",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "addingIsActive"
				},
				{
					"name": "existingrowsdata"
				},
				{
					"name": "Select2"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tName as string,\n\t\tNumber as string,\n\t\taddress as string,\n\t\tSal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tName as string,\n\t\tNumber as string,\n\t\taddress as string,\n\t\tSal as string,\n\t\tIsActive as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> empsqltable\nempsqltable select(mapColumn(\n\t\tsqlName = Name,\n\t\tsqlNumber = Number,\n\t\tsqladdress = address,\n\t\tsqlSal = Sal,\n\t\tsqlIsActive = IsActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1, Select1 lookup(Number == sqlNumber,\n\tmultiple: true,\n\tbroadcast: 'auto')~> Lookup1\nsource1 derive(IsActive = 1) ~> addingIsActive\nLookup1 filter(isNull(sqlNumber)) ~> existingrowsdata\nexistingrowsdata select(mapColumn(\n\t\tsqlName,\n\t\tsqlNumber,\n\t\tsqladdress,\n\t\tsqlSal,\n\t\tsqlIsActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(sqlIsActive = 0) ~> DerivedColumn1\nDerivedColumn1 alterRow(updateIf(1==1)) ~> AlterRow1\naddingIsActive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tName as string,\n\t\tNumber as string,\n\t\taddress as string,\n\t\tSal as string,\n\t\tIsActive as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tName,\n\t\tNumber,\n\t\taddress,\n\t\tSal,\n\t\tIsActive\n\t)) ~> sink1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tName as string,\n\t\tNumber as string,\n\t\taddress as string,\n\t\tSal as string,\n\t\tIsActive as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Number'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tName = sqlName,\n\t\tNumber = sqlNumber,\n\t\taddress = sqladdress,\n\t\tSal = sqlSal,\n\t\tIsActive = sqlIsActive\n\t)) ~> sink2"
		}
	}
}