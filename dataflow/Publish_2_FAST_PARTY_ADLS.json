{
	"name": "Publish_2_FAST_PARTY_ADLS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fast_adls",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FASTU_PARTY_ADLS",
						"type": "DatasetReference"
					},
					"name": "Insert"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PERSON_MDM_ID as string,",
				"          PARTY_TYPE as string,",
				"          PREFIX as string,",
				"          FIRST_NAME as string,",
				"          MIDDLE_NAME as string,",
				"          LAST_NAME as string,",
				"          SUFFIX as string,",
				"          FULL_NAME as string,",
				"          GENDER as string,",
				"          MARITAL_STATUS as string,",
				"          BIRTH_DT as date,",
				"          BIRTH_PLACE as string,",
				"          DEATH_DT as date,",
				"          SSN as string,",
				"          ITIN as string,",
				"          DRIVER_LICENSE as string,",
				"          PRIMARY_STREET_ADDR as string,",
				"          PRIMARY_ADDR_LINE1 as string,",
				"          PRIMARY_ADDR_LINE2 as string,",
				"          PRIMARY_ADDR_LINE3 as string,",
				"          PRIMARY_ADDR_CITY as string,",
				"          PRIMARY_ADDR_STATECODE as string,",
				"          PRIMARY_ADDR_POSTALCODE as string,",
				"          PRIMARY_COUNTRYCODE as string,",
				"          PRIMARY_COUNTYNAME as string,",
				"          PERSON_FLAG as string,",
				"          SRC_SYS_NAME as string,",
				"          PERSON_CHECK_SUM as string,",
				"          PARTY_CHECK_SUM as string,",
				"          PARTY_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['/FAST_ADLS/PERSON','/DELETED_FAST_ADLS/PERSON'],",
				"     format: 'parquet') ~> source1",
				"source1 derive(Del_Ind = 'N',",
				"          Created_Ts = currentTimestamp(),",
				"          created_By = 'DEV',",
				"          updated_Ts = currentTimestamp(),",
				"          UPDATED_BY = 'DEV',",
				"          bactch = 100) ~> derivedColumn1",
				"derivedColumn1 alterRow(insertIf(1==1)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          PARTY_MDM_ID = PERSON_MDM_ID,",
				"          PARTY_TYPE_ID,",
				"          SRC_SYS_NAME,",
				"          DELETE_IND = Del_Ind,",
				"          CHECK_SUM = PERSON_CHECK_SUM,",
				"          BATCH_ID = bactch,",
				"          CREATED_TS = Created_Ts,",
				"          CREATED_BY = created_By,",
				"          LAST_UPDATED_TS = updated_Ts,",
				"          LAST_UPDATED_BY = UPDATED_BY",
				"     )) ~> Insert"
			]
		}
	}
}