{
	"name": "DF_EASEOMNI_STG_PERSON_TGT",
	"properties": {
		"folder": {
			"name": "MDM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable_EASEOMNI_VIPS_STG0",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_EASEOMNIPERSON_TGT",
						"type": "DatasetReference"
					},
					"name": "TgtPerson100"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable20_EasePerson",
						"type": "DatasetReference"
					},
					"name": "Tgtperson101"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_EASEPerson_STG",
						"type": "DatasetReference"
					},
					"name": "PersonInsert",
					"rejectedDataLinkedService": {
						"referenceName": "ls_dfs_vesstzuc1unitedm001",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "DS_EASEPerson_STG",
						"type": "DatasetReference"
					},
					"name": "personUpdate"
				},
				{
					"dataset": {
						"referenceName": "DS_EASEPerson_STG",
						"type": "DatasetReference"
					},
					"name": "personinsert1"
				},
				{
					"dataset": {
						"referenceName": "DS_EASEPerson_STG",
						"type": "DatasetReference"
					},
					"name": "persondelete"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "SourceDeleteInd"
				},
				{
					"name": "Insert"
				},
				{
					"name": "split3"
				},
				{
					"name": "doesntexists1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "updated"
				},
				{
					"name": "exists2"
				},
				{
					"name": "split4"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "insert1"
				},
				{
					"name": "split5"
				},
				{
					"name": "exists4"
				},
				{
					"name": "exists6"
				},
				{
					"name": "exists7"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "deleteupdate"
				}
			],
			"script": "source(output(\n\t\tSOURCE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tBATCH_ID as string,\n\t\tPART_TIN as string,\n\t\tPART_BIRTH_DATE as string,\n\t\tPART_GENDER as string,\n\t\tPART_ACCOUNT_STATUS as string,\n\t\tPART_TYPE as string,\n\t\tPART_MARITAL_STATUS as string,\n\t\tPART_FULL_NAME as string,\n\t\tPART_FIRST_NAME as string,\n\t\tPART_LAST_NAME as string,\n\t\tPART_MIDDLE_NAME as string,\n\t\tPART_SUFFIX_TITLE as string,\n\t\tPART_ADDRESS_LINE1 as string,\n\t\tPART_ADDRESS_LINE2 as string,\n\t\tPART_ADDRESS_LINE3 as string,\n\t\tPART_CITY as string,\n\t\tPART_STATE as string,\n\t\tPART_POSTAL_CODE as string,\n\t\tPART_POSTAL_CODE5 as string,\n\t\tPART_COUNTRY as string,\n\t\tPART_COUNTRY_CD as string,\n\t\tPART_EMAIL as string,\n\t\tPART_PHONE as string,\n\t\tCHANGE_CODE as string,\n\t\tPERSON_CHECK_SUM as string,\n\t\tPERADDR_CHECK_SUM as string,\n\t\tPERSONIDENT_CHECK_SUM as string,\n\t\tPERCONT_P_PH_CHECK_SUM as string,\n\t\tPERCONT_P_EMAIL_CHECK_SUM as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT SOURCE_KEY,SOURCE_SYSTEM,BATCH_ID,PART_TIN,PART_BIRTH_DATE,PART_GENDER,PART_ACCOUNT_STATUS,PART_TYPE,PART_MARITAL_STATUS,PART_FULL_NAME,PART_FIRST_NAME,PART_LAST_NAME,PART_MIDDLE_NAME,\\nPART_SUFFIX_TITLE,PART_ADDRESS_LINE1,PART_ADDRESS_LINE2,PART_ADDRESS_LINE3,PART_CITY,PART_STATE,PART_POSTAL_CODE,SUBSTRING(PART_POSTAL_CODE,1,5) PART_POSTAL_CODE5,PART_COUNTRY,CASE WHEN TRIM(PART_COUNTRY) = \\'UNITED STATES\\' THEN \\'US\\' ELSE TRIM(PART_COUNTRY) END AS PART_COUNTRY_CD, \\nPART_EMAIL,PART_PHONE,CHANGE_CODE , \\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_TIN,\\'1\\')+ISNULL(PART_FULL_NAME,\\'2\\')+ISNULL(PART_FIRST_NAME,\\'3\\')+ISNULL(PART_MIDDLE_NAME,\\'4\\')+ISNULL(PART_LAST_NAME,\\'5\\')+ISNULL(PART_SUFFIX_TITLE,\\'6\\')+ISNULL(PART_GENDER,\\'7\\')+\\nISNULL(PART_BIRTH_DATE,\\'8\\')+ISNULL(PART_ADDRESS_LINE1,\\'9\\')+ISNULL(PART_ADDRESS_LINE2,\\'10\\') +ISNULL(PART_ADDRESS_LINE3,\\'11\\')+ISNULL(PART_CITY,\\'12\\')+ISNULL(PART_STATE,\\'13\\')+ISNULL(PART_POSTAL_CODE,\\'14\\')+ISNULL(PART_COUNTRY,\\'15\\')+\\nISNULL(PART_EMAIL,\\'16\\')+ISNULL(PART_PHONE,\\'17\\')+ISNULL(PART_TYPE,\\'18\\')+ISNULL(PART_MARITAL_STATUS,\\'19\\') ),2) PERSON_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_ADDRESS_LINE1,\\'1\\')+ISNULL(PART_ADDRESS_LINE2,\\'2\\') +ISNULL(PART_ADDRESS_LINE3,\\'3\\')+ISNULL(PART_CITY,\\'4\\')+ISNULL(PART_STATE,\\'5\\')+ISNULL(PART_POSTAL_CODE,\\'6\\')+ISNULL(PART_COUNTRY,\\'7\\')),2) PERADDR_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_TIN ,\\'1\\')),2) PERSONIDENT_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_PHONE,\\'1\\')+\\'PERSONAL\\'+\\'PHONE\\'),2) PERCONT_P_PH_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(PART_EMAIL,\\'1\\')+\\'PERSONAL\\'+\\'EMAIL\\'),2) PERCONT_P_EMAIL_CHECK_SUM\\nFROM CMDM_STAGE.RS_SOMNI_DC_PARTICIPANT_DAILY_DELTA_STG0 ',\n\tformat: 'query') ~> source1\nsource(output(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from [CMDM_STAGE].[Person_sample_easeomni] where sourceSystem=\\'SUPEROMNI\\'',\n\tformat: 'query') ~> TgtPerson100\nsource(output(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from [CMDM_STAGE].[Person_sample_easeomni] where sourceSystem=\\'SUPEROMNI\\'',\n\tformat: 'query') ~> Tgtperson101\nSourceDeleteInd derive(SourceCreateDateTime = 'NULL',\n\t\tSourceLastUpdateDateTime = 'NULL',\n\t\trow_status = 'A',\n\t\tLastupdatetime = currentTimestamp(),\n\t\tcreatedBy = 'MYV_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tlastupdatedBy = 'MYV_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tcreatedatatime = currentTimestamp()) ~> derivedColumn1\nexists4 derive(SourceDeletedInd = 'N') ~> SourceDeleteInd\nderivedColumn1 alterRow(insertIf(true())) ~> Insert\nexists2 split(CHANGE_CODE=='UPDATE'||CHANGE_CODE=='NEW',\n\tdisjoint: true) ~> split3@(ifNeworUpdate)\nsplit3@ifNeworUpdate, TgtPerson100 exists(PERSON_CHECK_SUM == check_sum,\n\tnegate:true,\n\tbroadcast: 'auto')~> doesntexists1\nexists6 derive(Row_Status = 'I',\n\t\tLastUpdatedTime = currentTimestamp(),\n\t\tlastupdatedby = 'MYV_OMNI_STG_TO_COMMON_UPDT_LOAD') ~> derivedColumn2\nderivedColumn2 alterRow(updateIf(true())) ~> updated\nsplit5@if1, TgtPerson100 exists(SOURCE_KEY==srcPkey && SOURCE_SYSTEM==sourceSystem && row_status=='A',\n\tnegate:false,\n\tbroadcast: 'auto')~> exists2\ndoesntexists1 split(CHANGE_CODE=='NEW'||CHANGE_CODE=='UPDATE',\n\tCHANGE_CODE=='NEW'||CHANGE_CODE=='UPDATE',\n\tdisjoint: true) ~> split4@(updateI, InsertA)\nsplit4@InsertA derive(SrcDelInd = case(CHANGE_CODE=='DELETE', 'Y','N'),\n\t\tRowStatus = 'A',\n\t\tLastUpdated_Time = currentTimestamp(),\n\t\tlastupdatedby = 'MYV_OMNI_STG_TO_COMMON_UPDT_LOAD',\n\t\tcreatedatetime = currentTimestamp(),\n\t\tcreatedby = 'MYV_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tsourcecreatedatetime = 'NULL',\n\t\tsourcelastupdatedatetime = 'NULL') ~> derivedColumn3\nderivedColumn3 alterRow(insertIf(true())) ~> insert1\nsource1 split(CHANGE_CODE=='NEW'||CHANGE_CODE=='UPDATE',\n\tCHANGE_CODE=='NEW',\n\tCHANGE_CODE=='DELETE',\n\tdisjoint: true) ~> split5@(if1, if2, if3)\nsplit5@if2, TgtPerson100 exists((SOURCE_KEY == srcPkey && SOURCE_SYSTEM==sourceSystem\n\t&& row_status == 'A'),\n\tnegate:true,\n\tbroadcast: 'auto')~> exists4\nTgtPerson100, split4@updateI exists(SOURCE_KEY==srcPkey,\n\tnegate:false,\n\tbroadcast: 'auto')~> exists6\nTgtperson101, split5@if3 exists(SSN == sourceSystem && row_status == 'A',\n\tnegate:false,\n\tbroadcast: 'auto')~> exists7\nexists7 derive(Srcinddel = 'Y',\n\t\tLastUpdatedTm = currentTimestamp(),\n\t\tlastupdatedby = 'MYV_OMNI_STG_TO_COMMON_UPDT_LOAD',\n\t\tcreatedatetime = currentTimestamp(),\n\t\tcreatedby = 'MYV_OMNI_STG_TO_COMMON_CREATE_LOAD',\n\t\tsourcecreatedatetime = 'NULL',\n\t\tsourcelastupdatedatetime = 'NULL') ~> derivedColumn5\nderivedColumn5 alterRow(updateIf(true())) ~> deleteupdate\nInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: true,\n\tmapColumn(\n\t\tFullName = PART_FULL_NAME,\n\t\tfirstName = PART_FIRST_NAME,\n\t\tmiddleName = PART_MIDDLE_NAME,\n\t\tlastName = PART_LAST_NAME,\n\t\tsuffix = PART_SUFFIX_TITLE,\n\t\tgender = PART_GENDER,\n\t\tbirthdate = PART_BIRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tsourceSystem = SOURCE_SYSTEM,\n\t\tSSN = PART_TIN,\n\t\tprimaryEmail = PART_EMAIL,\n\t\tprimeryPhone = PART_PHONE,\n\t\tprimaryAddrLine1 = PART_ADDRESS_LINE1,\n\t\tprimaryAddrLine2 = PART_ADDRESS_LINE2,\n\t\tprimaryAddrLine3 = PART_ADDRESS_LINE3,\n\t\tprimaryAddrCity = PART_CITY,\n\t\tprimaryAddrState = PART_STATE,\n\t\tprimaryAddrPostalCode = PART_POSTAL_CODE,\n\t\tcountryCD = PART_COUNTRY_CD,\n\t\tPostalCode5 = PART_POSTAL_CODE5,\n\t\tSourceDeletedInd,\n\t\tSourceStatus = PART_ACCOUNT_STATUS,\n\t\trow_status,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tcreateDateTime = createdatatime,\n\t\tcreatedBy,\n\t\tlastUpdateDateTime = Lastupdatetime,\n\t\tlastUpdatedBy = lastupdatedBy,\n\t\tSourceCreateDateTime,\n\t\tSourceLastUpdateDateTime,\n\t\tmaritalStatus = PART_MARITAL_STATUS\n\t)) ~> PersonInsert\nupdated sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['srcPkey','batch_id'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName,\n\t\tfirstName,\n\t\tmiddleName,\n\t\tlastName,\n\t\tsuffix,\n\t\tgender,\n\t\tbirthdate,\n\t\tbirthPlace,\n\t\tsrcPkey,\n\t\tsourceSystem,\n\t\tSSN,\n\t\tITIN,\n\t\tdriverLicense,\n\t\tprimaryEmail,\n\t\tprimeryPhone,\n\t\tstreetAddress,\n\t\tprimaryAddrLine1,\n\t\tprimaryAddrLine2,\n\t\tprimaryAddrLine3,\n\t\tprimaryAddrCity,\n\t\tprimaryAddrState,\n\t\tprimaryAddrPostalCode,\n\t\tcountryCD,\n\t\tcountyName,\n\t\tPostalCode5,\n\t\tSourceDeletedInd,\n\t\tSourceStatus,\n\t\tbatch_id,\n\t\tcheck_sum,\n\t\tcreateDateTime,\n\t\tcreatedBy,\n\t\tlastUpdateDateTime,\n\t\tlastUpdatedBy = derivedColumn2@lastupdatedby,\n\t\tSourceCreateDateTime,\n\t\tSourceLastUpdateDateTime,\n\t\tmaritalStatus\n\t)) ~> personUpdate\ninsert1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName = PART_FULL_NAME,\n\t\tfirstName = PART_FIRST_NAME,\n\t\tmiddleName = PART_MIDDLE_NAME,\n\t\tlastName = PART_LAST_NAME,\n\t\tsuffix = PART_SUFFIX_TITLE,\n\t\tgender = PART_GENDER,\n\t\tbirthdate = PART_BIRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tsourceSystem = SOURCE_SYSTEM,\n\t\tSSN = PART_TIN,\n\t\tprimaryEmail = PART_EMAIL,\n\t\tprimeryPhone = PART_PHONE,\n\t\tprimaryAddrLine1 = PART_ADDRESS_LINE1,\n\t\tprimaryAddrLine2 = PART_ADDRESS_LINE2,\n\t\tprimaryAddrLine3 = PART_ADDRESS_LINE3,\n\t\tprimaryAddrCity = PART_CITY,\n\t\tprimaryAddrState = PART_STATE,\n\t\tprimaryAddrPostalCode = PART_POSTAL_CODE,\n\t\tcountryCD = PART_COUNTRY_CD,\n\t\tcountyName = PART_COUNTRY,\n\t\tPostalCode5 = PART_POSTAL_CODE5,\n\t\tSourceDeletedInd = SrcDelInd,\n\t\tSourceStatus = PART_ACCOUNT_STATUS,\n\t\trow_status = RowStatus,\n\t\tbatch_id = BATCH_ID,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tcreateDateTime = createdatetime,\n\t\tcreatedBy = createdby,\n\t\tlastUpdateDateTime = LastUpdated_Time,\n\t\tlastUpdatedBy = lastupdatedby,\n\t\tSourceCreateDateTime = sourcecreatedatetime,\n\t\tSourceLastUpdateDateTime = sourcelastupdatedatetime,\n\t\tmaritalStatus = PART_MARITAL_STATUS\n\t)) ~> personinsert1\ndeleteupdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp,\n\t\tmaritalStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['srcPkey','batch_id'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 4,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tprefix,\n\t\tFullName,\n\t\tfirstName,\n\t\tmiddleName,\n\t\tlastName,\n\t\tsuffix,\n\t\tgender,\n\t\tbirthdate,\n\t\tbirthPlace,\n\t\tsrcPkey,\n\t\tsourceSystem,\n\t\tSSN,\n\t\tITIN,\n\t\tdriverLicense,\n\t\tprimaryEmail,\n\t\tprimeryPhone,\n\t\tstreetAddress,\n\t\tprimaryAddrLine1,\n\t\tprimaryAddrLine2,\n\t\tprimaryAddrLine3,\n\t\tprimaryAddrCity,\n\t\tprimaryAddrState,\n\t\tprimaryAddrPostalCode,\n\t\tcountryCD,\n\t\tcountyName,\n\t\tPostalCode5,\n\t\tSourceDeletedInd,\n\t\tSourceStatus,\n\t\trow_status,\n\t\tbatch_id,\n\t\tcheck_sum,\n\t\tlastUpdateDateTime,\n\t\tmaritalStatus\n\t)) ~> persondelete"
		}
	}
}