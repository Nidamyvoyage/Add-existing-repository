{
	"name": "DF_LND_STG_Person1_reference",
	"properties": {
		"folder": {
			"name": "MDM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable15",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable20_Person",
						"type": "DatasetReference"
					},
					"name": "TgtPerson"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable15",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable43",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Person_STG",
						"type": "DatasetReference"
					},
					"name": "PersonDelete"
				},
				{
					"dataset": {
						"referenceName": "DS_Person_STG",
						"type": "DatasetReference"
					},
					"name": "PersonUpdate"
				},
				{
					"dataset": {
						"referenceName": "DS_Person_STG",
						"type": "DatasetReference"
					},
					"name": "PersonInsert"
				},
				{
					"dataset": {
						"referenceName": "DS_Person_STG",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "SourceDeleteInd"
				},
				{
					"name": "Insert"
				},
				{
					"name": "Doesntexists1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "Updated"
				},
				{
					"name": "split2"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "Inactive"
				},
				{
					"name": "filter2"
				},
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join2"
				},
				{
					"name": "filter3"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "exists4"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "alterRow1"
				}
			],
			"script": "source(output(\n\t\tSOURCE_KEY as string,\n\t\tWS_EXT_PH_PART_NUM as string,\n\t\tWS_EXT_PH_NAME as string,\n\t\tLAST_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tWS_EXT_PH_BRTH_DATE as date,\n\t\tWS_EXT_PH_ADDR_L1 as string,\n\t\tWS_EXT_PH_ADDR_L2 as string,\n\t\tWS_EXT_PH_ADDR_L3 as string,\n\t\tWS_EXT_PH_CITY as string,\n\t\tWS_EXT_PH_STATE as string,\n\t\tWS_EXT_PH_ZIP as string,\n\t\tZIP_CODE5 as string,\n\t\tWS_EXT_PH_OMNI_VERSION as string,\n\t\tCHANGE_CODE as string,\n\t\tCOUNTRY_CODE as string,\n\t\tWS_EXT_PH_STAT as string,\n\t\tPERSON_CHECK_SUM as string,\n\t\tPERADDR_CHECK_SUM as string,\n\t\tPERSONIDENT_CHECK_SUM as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT SOURCE_KEY,WS_EXT_PH_PART_NUM,WS_EXT_PH_NAME,LAST_NAME,\\nCASE WHEN CHARINDEX(\\' \\',FIRST_NAME) > 0 THEN trim(SUBSTRING(FIRST_NAME,1,CHARINDEX(\\' \\',FIRST_NAME))) ELSE FIRST_NAME END AS FIRST_NAME,\\nCASE WHEN CHARINDEX(\\' \\',FIRST_NAME) > 0 THEN trim(SUBSTRING(FIRST_NAME,CHARINDEX(\\' \\',FIRST_NAME),LEN(FIRST_NAME))) ELSE NULL END AS MIDDLE_NAME,\\nWS_EXT_PH_BRTH_DATE,WS_EXT_PH_ADDR_L1,WS_EXT_PH_ADDR_L2,WS_EXT_PH_ADDR_L3,WS_EXT_PH_CITY,WS_EXT_PH_STATE,WS_EXT_PH_ZIP,ZIP_CODE5,WS_EXT_PH_OMNI_VERSION,CHANGE_CODE,\\nCOUNTRY_CODE,WS_EXT_PH_STAT,PERSON_CHECK_SUM,PERADDR_CHECK_SUM,PERSONIDENT_CHECK_SUM\\nFROM (\\nSELECT A.SOURCE_KEY,A.WS_EXT_PH_PART_NUM,UPPER(A.WS_EXT_PH_NAME) WS_EXT_PH_NAME, \\nCASE WHEN A.ws_ext_ph_name like \\'%,%\\' THEN UPPER(trim(SUBSTRING(A.ws_ext_ph_name,1,(CHARINDEX(\\',\\',A.ws_ext_ph_name)-1))))\\nELSE UPPER(A.WS_EXT_PH_NAME) END AS LAST_NAME,\\nCASE WHEN A.ws_ext_ph_name like \\'%,%\\' THEN UPPER(trim(SUBSTRING(A.ws_ext_ph_name,CHARINDEX(\\',\\',A.ws_ext_ph_name)+1,LEN(A.ws_ext_ph_name)))) \\nELSE NULL END AS FIRST_NAME,\\nCAST(A.WS_EXT_PH_BRTH_DATE as date) as WS_EXT_PH_BRTH_DATE,UPPER(A.WS_EXT_PH_ADDR_L1) WS_EXT_PH_ADDR_L1,UPPER(A.WS_EXT_PH_ADDR_L2) WS_EXT_PH_ADDR_L2,UPPER(A.WS_EXT_PH_ADDR_L3) WS_EXT_PH_ADDR_L3,\\nUPPER(A.WS_EXT_PH_CITY) WS_EXT_PH_CITY,CASE WHEN UPPER(A.WS_EXT_PH_STATE)=\\'US\\' THEN NULL ELSE UPPER(A.WS_EXT_PH_STATE) END WS_EXT_PH_STATE ,\\nA.WS_EXT_PH_ZIP,SUBSTRING(A.WS_EXT_PH_ZIP,1,5) ZIP_CODE5,UPPER(A.WS_EXT_PH_OMNI_VERSION) WS_EXT_PH_OMNI_VERSION,UPPER(A.CHANGE_CODE) CHANGE_CODE,UPPER(B.COUNTRY_CODE) COUNTRY_CODE,UPPER(A.WS_EXT_PH_STAT) WS_EXT_PH_STAT,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_NAME,\\'1\\')+ISNULL(WS_EXT_PH_PART_NUM,\\'2\\')+ISNULL(WS_EXT_PH_BRTH_DATE,\\'3\\')+ISNULL(WS_EXT_PH_ADDR_L1,\\'4\\')+ISNULL(WS_EXT_PH_ADDR_L2,\\'5\\')+\\nISNULL(WS_EXT_PH_ADDR_L3,\\'6\\')+ISNULL(WS_EXT_PH_CITY,\\'7\\')+ISNULL(WS_EXT_PH_STATE,\\'8\\')+ISNULL(WS_EXT_PH_ZIP,\\'9\\')+ISNULL(WS_EXT_PH_STAT,\\'10\\')    ),2) PERSON_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_ADDR_L1,\\'4\\')+ISNULL(WS_EXT_PH_ADDR_L2,\\'5\\')+ISNULL(WS_EXT_PH_ADDR_L3,\\'6\\')+ISNULL(WS_EXT_PH_CITY,\\'7\\')+ISNULL(WS_EXT_PH_STATE,\\'8\\')+ISNULL(WS_EXT_PH_ZIP,\\'9\\')),2) PERADDR_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_PART_NUM,\\'2\\')),2) PERSONIDENT_CHECK_SUM\\nFROM CMDM_STAGE.RS_OMNI_VIPS_DAILY_PART_HEADER_DELTA_STG A LEFT JOIN \\nCMDM_STAGE.STATE_MASTER B ON UPPER(TRIM(A.WS_EXT_PH_STATE)) = UPPER(TRIM(B.STATE_CODE))\\n) T',\n\tformat: 'query') ~> source1\nsource(output(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TgtPerson\nsource(output(\n\t\tSOURCE_KEY as string,\n\t\tWS_EXT_PH_PART_NUM as string,\n\t\tWS_EXT_PH_NAME as string,\n\t\tLAST_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tWS_EXT_PH_BRTH_DATE as date,\n\t\tWS_EXT_PH_ADDR_L1 as string,\n\t\tWS_EXT_PH_ADDR_L2 as string,\n\t\tWS_EXT_PH_ADDR_L3 as string,\n\t\tWS_EXT_PH_CITY as string,\n\t\tWS_EXT_PH_STATE as string,\n\t\tWS_EXT_PH_ZIP as string,\n\t\tZIP_CODE5 as string,\n\t\tWS_EXT_PH_OMNI_VERSION as string,\n\t\tCHANGE_CODE as string,\n\t\tCOUNTRY_CODE as string,\n\t\tWS_EXT_PH_STAT as string,\n\t\tPERSON_CHECK_SUM as string,\n\t\tPERADDR_CHECK_SUM as string,\n\t\tPERSONIDENT_CHECK_SUM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT SOURCE_KEY,WS_EXT_PH_PART_NUM,WS_EXT_PH_NAME,LAST_NAME,\\nCASE WHEN CHARINDEX(\\' \\',FIRST_NAME) > 0 THEN trim(SUBSTRING(FIRST_NAME,1,CHARINDEX(\\' \\',FIRST_NAME))) ELSE FIRST_NAME END AS FIRST_NAME,\\nCASE WHEN CHARINDEX(\\' \\',FIRST_NAME) > 0 THEN trim(SUBSTRING(FIRST_NAME,CHARINDEX(\\' \\',FIRST_NAME),LEN(FIRST_NAME))) ELSE NULL END AS MIDDLE_NAME,\\nWS_EXT_PH_BRTH_DATE,WS_EXT_PH_ADDR_L1,WS_EXT_PH_ADDR_L2,WS_EXT_PH_ADDR_L3,WS_EXT_PH_CITY,WS_EXT_PH_STATE,WS_EXT_PH_ZIP,ZIP_CODE5,WS_EXT_PH_OMNI_VERSION,CHANGE_CODE,\\nCOUNTRY_CODE,WS_EXT_PH_STAT,PERSON_CHECK_SUM,PERADDR_CHECK_SUM,PERSONIDENT_CHECK_SUM\\nFROM (\\nSELECT A.SOURCE_KEY,A.WS_EXT_PH_PART_NUM,UPPER(A.WS_EXT_PH_NAME) WS_EXT_PH_NAME, \\nCASE WHEN A.ws_ext_ph_name like \\'%,%\\' THEN UPPER(trim(SUBSTRING(A.ws_ext_ph_name,1,(CHARINDEX(\\',\\',A.ws_ext_ph_name)-1))))\\nELSE UPPER(A.WS_EXT_PH_NAME) END AS LAST_NAME,\\nCASE WHEN A.ws_ext_ph_name like \\'%,%\\' THEN UPPER(trim(SUBSTRING(A.ws_ext_ph_name,CHARINDEX(\\',\\',A.ws_ext_ph_name)+1,LEN(A.ws_ext_ph_name)))) \\nELSE NULL END AS FIRST_NAME,\\nCAST(A.WS_EXT_PH_BRTH_DATE as date) as WS_EXT_PH_BRTH_DATE,UPPER(A.WS_EXT_PH_ADDR_L1) WS_EXT_PH_ADDR_L1,UPPER(A.WS_EXT_PH_ADDR_L2) WS_EXT_PH_ADDR_L2,UPPER(A.WS_EXT_PH_ADDR_L3) WS_EXT_PH_ADDR_L3,\\nUPPER(A.WS_EXT_PH_CITY) WS_EXT_PH_CITY,CASE WHEN UPPER(A.WS_EXT_PH_STATE)=\\'US\\' THEN NULL ELSE UPPER(A.WS_EXT_PH_STATE) END WS_EXT_PH_STATE ,\\nA.WS_EXT_PH_ZIP,SUBSTRING(A.WS_EXT_PH_ZIP,1,5) ZIP_CODE5,UPPER(A.WS_EXT_PH_OMNI_VERSION) WS_EXT_PH_OMNI_VERSION,UPPER(A.CHANGE_CODE) CHANGE_CODE,UPPER(B.COUNTRY_CODE) COUNTRY_CODE,UPPER(A.WS_EXT_PH_STAT) WS_EXT_PH_STAT,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_NAME,\\'1\\')+ISNULL(WS_EXT_PH_PART_NUM,\\'2\\')+ISNULL(WS_EXT_PH_BRTH_DATE,\\'3\\')+ISNULL(WS_EXT_PH_ADDR_L1,\\'4\\')+ISNULL(WS_EXT_PH_ADDR_L2,\\'5\\')+\\nISNULL(WS_EXT_PH_ADDR_L3,\\'6\\')+ISNULL(WS_EXT_PH_CITY,\\'7\\')+ISNULL(WS_EXT_PH_STATE,\\'8\\')+ISNULL(WS_EXT_PH_ZIP,\\'9\\')+ISNULL(WS_EXT_PH_STAT,\\'10\\')    ),2) PERSON_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_ADDR_L1,\\'4\\')+ISNULL(WS_EXT_PH_ADDR_L2,\\'5\\')+ISNULL(WS_EXT_PH_ADDR_L3,\\'6\\')+ISNULL(WS_EXT_PH_CITY,\\'7\\')+ISNULL(WS_EXT_PH_STATE,\\'8\\')+ISNULL(WS_EXT_PH_ZIP,\\'9\\')),2) PERADDR_CHECK_SUM,\\nCONVERT(NVARCHAR(32),HashBytes(\\'MD5\\',ISNULL(WS_EXT_PH_PART_NUM,\\'2\\')),2) PERSONIDENT_CHECK_SUM\\nFROM CMDM_STAGE.RS_OMNI_VIPS_DAILY_PART_HEADER_DELTA_STG A LEFT JOIN \\nCMDM_STAGE.STATE_MASTER B ON UPPER(TRIM(A.WS_EXT_PH_STATE)) = UPPER(TRIM(B.STATE_CODE))\\n) T',\n\tformat: 'query') ~> source3\nsource(output(\n\t\tprefix as string,\n\t\tFullName as string,\n\t\tfirstName as string,\n\t\tmiddleName as string,\n\t\tlastName as string,\n\t\tsuffix as string,\n\t\tgender as string,\n\t\tbirthdate as date,\n\t\tbirthPlace as string,\n\t\tsrcPkey as string,\n\t\tsourceSystem as string,\n\t\tSSN as string,\n\t\tITIN as string,\n\t\tdriverLicense as string,\n\t\tprimaryEmail as string,\n\t\tprimeryPhone as string,\n\t\tstreetAddress as string,\n\t\tprimaryAddrLine1 as string,\n\t\tprimaryAddrLine2 as string,\n\t\tprimaryAddrLine3 as string,\n\t\tprimaryAddrCity as string,\n\t\tprimaryAddrState as string,\n\t\tprimaryAddrPostalCode as string,\n\t\tcountryCD as string,\n\t\tcountyName as string,\n\t\tPostalCode5 as string,\n\t\tSourceDeletedInd as string,\n\t\tSourceStatus as string,\n\t\trow_status as string,\n\t\tbatch_id as string,\n\t\tcheck_sum as string,\n\t\tcreateDateTime as timestamp,\n\t\tcreatedBy as string,\n\t\tlastUpdateDateTime as timestamp,\n\t\tlastUpdatedBy as string,\n\t\tSourceCreateDateTime as timestamp,\n\t\tSourceLastUpdateDateTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM CMDM_STAGE.PERSON where sourceSystem=\\'OMNI 7.1\\'',\n\tformat: 'query') ~> source4\nSourceDeleteInd derive(SourceCreateDateTime = currentTimestamp(),\n\t\tSourceLastUpdateDateTime = currentTimestamp(),\n\t\trow_status = 'A',\n\t\tBatchid = 1,\n\t\tLastupdatetime = currentTimestamp()) ~> derivedColumn1\nDoesntexists1 derive(SourceDeletedInd = case(CHANGE_CODE=='DELETE', 'Y','N')) ~> SourceDeleteInd\nderivedColumn1 alterRow(insertIf(true())) ~> Insert\nfilter1, TgtPerson exists(derivedColumn7@Row_Status == TgtPerson@row_status\n\t&& SOURCE_KEY == srcPkey\n\t&& WS_EXT_PH_OMNI_VERSION == sourceSystem,\n\tnegate:true,\n\tbroadcast: 'auto')~> Doesntexists1\nderivedColumn7 filter(CHANGE_CODE=='NEW') ~> filter1\nfilter3, TgtPerson exists(PERSON_CHECK_SUM == check_sum\n\t&& SOURCE_KEY == srcPkey\n\t&& WS_EXT_PH_OMNI_VERSION == sourceSystem,\n\tnegate:false,\n\tbroadcast: 'auto')~> exists1\nsplit2@ChangecodeUpdated derive(Row_Status = 'A',\n\t\tBatch_Id = 4,\n\t\tLastUpdatedTime = currentTimestamp(),\n\t\tSrcInd = 'N') ~> derivedColumn4\nderivedColumn4 alterRow(insertIf(true())) ~> Updated\nfilter2 split(CHANGE_CODE=='UPDATE',\n\tCHANGE_CODE=='UPDATE',\n\tdisjoint: true) ~> split2@(ChangecodeUpdated, ChangecodeDeleted)\njoin1 derive(Row_Status = 'I',\n\t\tSrcDInd = 'N',\n\t\tLastUpdatedTime = currentTimestamp()) ~> derivedColumn6\nderivedColumn6 alterRow(updateIf(true())) ~> Inactive\nexists1 filter(CHANGE_CODE=='UPDATE') ~> filter2\nsplit2@ChangecodeDeleted, join2 join(SOURCE_KEY == srcPkey,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nsource4 aggregate(Mini_Batch_Id = max(batch_id)) ~> aggregate1\naggregate1, TgtPerson join(Mini_Batch_Id == batch_id,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join2\nsource3 filter(CHANGE_CODE=='UPDATE') ~> filter3\nsource1 derive(Row_Status = 'A') ~> derivedColumn7\nfilter1, TgtPerson exists(SOURCE_KEY == srcPkey\n\t&& WS_EXT_PH_OMNI_VERSION == sourceSystem\n\t&& derivedColumn7@Row_Status == TgtPerson@row_status,\n\tnegate:false,\n\tbroadcast: 'auto')~> exists4\nexists4 derive(Row_Status = 'A',\n\t\tSourceDeletedInd = 'N',\n\t\tBatch_Id = 1,\n\t\tCreatetime = currentTimestamp(),\n\t\tCreatedBy = 'OMNI',\n\t\tLastUpdate = currentTimestamp(),\n\t\tPERSON_CHECK_SUM = PERSON_CHECK_SUM) ~> derivedColumn8\nderivedColumn8 alterRow(insertIf(true())) ~> alterRow1\nInactive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['srcPkey','batch_id'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName = WS_EXT_PH_PART_NUM,\n\t\tfirstName = FIRST_NAME,\n\t\tmiddleName = MIDDLE_NAME,\n\t\tlastName = LAST_NAME,\n\t\tbirthdate = WS_EXT_PH_BRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tprimaryAddrLine1 = WS_EXT_PH_ADDR_L1,\n\t\tprimaryAddrLine2 = WS_EXT_PH_ADDR_L2,\n\t\tprimaryAddrLine3 = WS_EXT_PH_ADDR_L3,\n\t\tprimaryAddrCity = WS_EXT_PH_CITY,\n\t\tprimaryAddrState = WS_EXT_PH_STATE,\n\t\tprimaryAddrPostalCode = ZIP_CODE5,\n\t\tcountryCD = COUNTRY_CODE,\n\t\tPostalCode5 = ZIP_CODE5,\n\t\tSourceDeletedInd = SrcDInd,\n\t\tSourceStatus = WS_EXT_PH_STAT,\n\t\trow_status = derivedColumn6@Row_Status,\n\t\tbatch_id = Mini_Batch_Id,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tlastUpdateDateTime = LastUpdatedTime\n\t)) ~> PersonDelete\nUpdated sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['srcPkey','batch_id'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName = WS_EXT_PH_NAME,\n\t\tfirstName = FIRST_NAME,\n\t\tmiddleName = MIDDLE_NAME,\n\t\tlastName = LAST_NAME,\n\t\tbirthdate = WS_EXT_PH_BRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tsourceSystem = WS_EXT_PH_OMNI_VERSION,\n\t\tSSN = WS_EXT_PH_PART_NUM,\n\t\tprimaryAddrLine1 = WS_EXT_PH_ADDR_L1,\n\t\tprimaryAddrLine2 = WS_EXT_PH_ADDR_L2,\n\t\tprimaryAddrLine3 = WS_EXT_PH_ADDR_L3,\n\t\tprimaryAddrCity = WS_EXT_PH_CITY,\n\t\tprimaryAddrState = WS_EXT_PH_STATE,\n\t\tprimaryAddrPostalCode = WS_EXT_PH_ZIP,\n\t\tcountryCD = COUNTRY_CODE,\n\t\tPostalCode5 = ZIP_CODE5,\n\t\tSourceDeletedInd = SrcInd,\n\t\tSourceStatus = WS_EXT_PH_STAT,\n\t\trow_status = Row_Status,\n\t\tbatch_id = Batch_Id,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tlastUpdateDateTime = LastUpdatedTime\n\t)) ~> PersonUpdate\nInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName = WS_EXT_PH_NAME,\n\t\tfirstName = FIRST_NAME,\n\t\tmiddleName = MIDDLE_NAME,\n\t\tlastName = LAST_NAME,\n\t\tbirthdate = WS_EXT_PH_BRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tsourceSystem = WS_EXT_PH_OMNI_VERSION,\n\t\tSSN = WS_EXT_PH_PART_NUM,\n\t\tprimaryAddrLine1 = WS_EXT_PH_ADDR_L1,\n\t\tprimaryAddrLine2 = WS_EXT_PH_ADDR_L2,\n\t\tprimaryAddrLine3 = WS_EXT_PH_ADDR_L3,\n\t\tprimaryAddrCity = WS_EXT_PH_CITY,\n\t\tprimaryAddrState = WS_EXT_PH_STATE,\n\t\tprimaryAddrPostalCode = WS_EXT_PH_ZIP,\n\t\tcountryCD = COUNTRY_CODE,\n\t\tPostalCode5 = ZIP_CODE5,\n\t\tSourceDeletedInd,\n\t\tSourceStatus = WS_EXT_PH_STAT,\n\t\trow_status,\n\t\tbatch_id = Batchid,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tlastUpdateDateTime = Lastupdatetime,\n\t\tSourceCreateDateTime,\n\t\tSourceLastUpdateDateTime\n\t)) ~> PersonInsert\nalterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFullName = WS_EXT_PH_NAME,\n\t\tfirstName = FIRST_NAME,\n\t\tmiddleName = MIDDLE_NAME,\n\t\tlastName = LAST_NAME,\n\t\tbirthdate = WS_EXT_PH_BRTH_DATE,\n\t\tsrcPkey = SOURCE_KEY,\n\t\tsourceSystem = WS_EXT_PH_OMNI_VERSION,\n\t\tSSN = WS_EXT_PH_PART_NUM,\n\t\tprimaryAddrLine1 = WS_EXT_PH_ADDR_L1,\n\t\tprimaryAddrLine2 = WS_EXT_PH_ADDR_L2,\n\t\tprimaryAddrLine3 = WS_EXT_PH_ADDR_L3,\n\t\tprimaryAddrCity = WS_EXT_PH_CITY,\n\t\tprimaryAddrState = WS_EXT_PH_STATE,\n\t\tprimaryAddrPostalCode = WS_EXT_PH_ZIP,\n\t\tcountryCD = COUNTRY_CODE,\n\t\tPostalCode5 = ZIP_CODE5,\n\t\tSourceDeletedInd,\n\t\tSourceStatus = WS_EXT_PH_STAT,\n\t\trow_status = Row_Status,\n\t\tbatch_id = Batch_Id,\n\t\tcheck_sum = PERSON_CHECK_SUM,\n\t\tcreateDateTime = Createtime,\n\t\tcreatedBy = CreatedBy,\n\t\tlastUpdateDateTime = LastUpdate,\n\t\tlastUpdatedBy = CreatedBy,\n\t\tSourceCreateDateTime = LastUpdate,\n\t\tSourceLastUpdateDateTime = Createtime\n\t)) ~> sink1"
		}
	}
}