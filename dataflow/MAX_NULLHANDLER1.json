{
	"name": "MAX_NULLHANDLER1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MAX_DELTA_STG1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MAX_DELTA_STG1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SOURCE_SYSTEM as string,",
				"          SOURCE_KEY as string,",
				"          PERSON_TECHID as string,",
				"          FNAME as string,",
				"          MNAME1 as string,",
				"          MNAME2 as string,",
				"          LNAME as string,",
				"          NAMESUFFIX as string,",
				"          DOB as string,",
				"          GENDER as string,",
				"          SSN as string,",
				"          P_A_COUNTRY as string,",
				"          P_A_MAILLINE1 as string,",
				"          P_A_MAILLINE2 as string,",
				"          P_A_CITY as string,",
				"          P_A_STATE as string,",
				"          P_A_POSTALCODE as string,",
				"          P_A_COUNTY as string,",
				"          P_A_PHONE as string,",
				"          P_A_CELLPHONE as string,",
				"          P_A_FAX as string,",
				"          P_A_TOLLFREENUMBER as string,",
				"          P_A_EMAIL as string,",
				"          S_A_COUNTRY as string,",
				"          S_A_MAILLINE1 as string,",
				"          S_A_MAILLINE2 as string,",
				"          S_A_CITY as string,",
				"          S_A_STATE as string,",
				"          S_A_POSTALCODE as string,",
				"          S_A_COUNTY as string,",
				"          S_A_PHONE as string,",
				"          S_A_CELLPHONE as string,",
				"          S_A_FAX as string,",
				"          S_A_TOLLFREENUMBER as string,",
				"          S_A_EMAIL as string,",
				"          CHECK_SUM as string,",
				"          CHANGE_CODE as string,",
				"          batch_id as string,",
				"          createDateTime as timestamp,",
				"          createdBy as string,",
				"          lastUpdateDateTime as timestamp,",
				"          lastUpdatedBy as string,",
				"          TITLE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select  case when upper(TRIM(SOURCE_SYSTEM))=\\'\\' then null else TRIM(SOURCE_SYSTEM) end as SOURCE_SYSTEM,\\ncase when upper(TRIM(SOURCE_KEY))=\\'\\' then null else TRIM(SOURCE_KEY) end as SOURCE_KEY,\\ncase when upper(TRIM(PERSON_TECHID))=\\'\\' then null else TRIM(PERSON_TECHID) end as PERSON_TECHID,\\ncase when upper(TRIM(FNAME))=\\'\\' then null else TRIM(FNAME) end as FNAME,\\ncase when upper(TRIM(MNAME1))=\\'\\' then null else TRIM(MNAME1) end as MNAME1,\\ncase when upper(TRIM(MNAME2))=\\'\\' then null else TRIM(MNAME2) end as MNAME2,\\ncase when upper(TRIM(LNAME))=\\'\\' then null else TRIM(LNAME) end as LNAME,\\ncase when upper(TRIM(NAMESUFFIX))=\\'\\' then null else TRIM(NAMESUFFIX) end as NAMESUFFIX,\\ncase when upper(DOB)=\\'\\' then null else DOB end as DOB,\\ncase when upper(TRIM(GENDER))=\\'\\' then null else TRIM(GENDER) end as GENDER,\\ncase when upper(TRIM(SSN))=\\'\\' then null else TRIM(SSN) end as SSN,\\ncase when upper(TRIM(P_A_COUNTRY))=\\'\\' then null else TRIM(P_A_COUNTRY) end as P_A_COUNTRY,\\ncase when upper(TRIM(P_A_MAILLINE1))=\\'\\' then null else TRIM(P_A_MAILLINE1) end as P_A_MAILLINE1,\\ncase when upper(TRIM(P_A_MAILLINE2))=\\'\\' then null else TRIM(P_A_MAILLINE2) end as P_A_MAILLINE2,\\ncase when upper(TRIM(P_A_CITY))=\\'\\' then null else TRIM(P_A_CITY) end as P_A_CITY,\\ncase when upper(TRIM(P_A_STATE))=\\'\\' then null else TRIM(P_A_STATE) end as P_A_STATE,\\ncase when upper(TRIM(P_A_POSTALCODE))=\\'\\' then null else TRIM(P_A_POSTALCODE) end as P_A_POSTALCODE,\\ncase when upper(TRIM(P_A_COUNTY))=\\'\\' then null else TRIM(P_A_COUNTY) end as P_A_COUNTY,\\ncase when upper(TRIM(P_A_PHONE))=\\'\\' then null else TRIM(P_A_PHONE) end as P_A_PHONE,\\ncase when upper(TRIM(P_A_CELLPHONE))=\\'\\' then null else TRIM(P_A_CELLPHONE) end as P_A_CELLPHONE,\\ncase when upper(TRIM(P_A_FAX))=\\'\\' then null else TRIM(P_A_FAX) end as P_A_FAX,\\ncase when upper(TRIM(P_A_TOLLFREENUMBER))=\\'\\' then null else TRIM(P_A_TOLLFREENUMBER) end as P_A_TOLLFREENUMBER,\\ncase when upper(TRIM(P_A_EMAIL))=\\'\\' then null else TRIM(P_A_EMAIL) end as P_A_EMAIL,\\ncase when upper(TRIM(S_A_COUNTRY))=\\'\\' then null else TRIM(S_A_COUNTRY) end as S_A_COUNTRY,\\ncase when upper(TRIM(S_A_MAILLINE1))=\\'\\' then null else TRIM(S_A_MAILLINE1) end as S_A_MAILLINE1,\\ncase when upper(TRIM(S_A_MAILLINE2))=\\'\\' then null else TRIM(S_A_MAILLINE2) end as S_A_MAILLINE2,\\ncase when upper(TRIM(S_A_CITY))=\\'\\' then null else TRIM(S_A_CITY) end as S_A_CITY,\\ncase when upper(TRIM(S_A_STATE))=\\'\\' then null else TRIM(S_A_STATE) end as S_A_STATE,\\ncase when upper(TRIM(S_A_POSTALCODE))=\\'\\' then null else TRIM(S_A_POSTALCODE) end as S_A_POSTALCODE,\\ncase when upper(TRIM(S_A_COUNTY))=\\'\\' then null else TRIM(S_A_COUNTY) end as S_A_COUNTY,\\ncase when upper(TRIM(S_A_PHONE))=\\'\\' then null else TRIM(S_A_PHONE) end as S_A_PHONE,\\ncase when upper(TRIM(S_A_CELLPHONE))=\\'\\' then null else TRIM(S_A_CELLPHONE) end as S_A_CELLPHONE,\\ncase when upper(TRIM(S_A_FAX))=\\'\\' then null else TRIM(S_A_FAX) end as S_A_FAX,\\ncase when upper(TRIM(S_A_TOLLFREENUMBER))=\\'\\' then null else TRIM(S_A_TOLLFREENUMBER) end as S_A_TOLLFREENUMBER,\\ncase when upper(TRIM(S_A_EMAIL))=\\'\\' then null else TRIM(S_A_EMAIL) end as S_A_EMAIL,\\ncase when upper(TRIM(CHECK_SUM))=\\'\\' then null else TRIM(CHECK_SUM) end as CHECK_SUM,\\ncase when upper(TRIM(CHANGE_CODE))=\\'\\' then null else TRIM(CHANGE_CODE) end as CHANGE_CODE,\\ncase when upper(TRIM(batch_id))=\\'\\' then null else TRIM(batch_id) end as batch_id,\\ncreateDateTime,\\ncreatedBy,\\nlastUpdateDateTime,\\nlastUpdatedBy,\\ncase when upper(TRIM(TITLE))=\\'\\' then null else TRIM(TITLE) end as TITLE\\nfrom [CMDM_STAGE].[EB_MAX_DGTAL_PERSN_INFO_DELTA_STG]',",
				"     format: 'query') ~> source1",
				"source1 alterRow(updateIf(1==1)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SOURCE_SYSTEM as string,",
				"          SOURCE_KEY as string,",
				"          PERSON_TECHID as string,",
				"          TITLE as string,",
				"          FNAME as string,",
				"          MNAME1 as string,",
				"          MNAME2 as string,",
				"          LNAME as string,",
				"          NAMESUFFIX as string,",
				"          DOB as date,",
				"          GENDER as string,",
				"          SSN as string,",
				"          P_A_COUNTRY as string,",
				"          P_A_MAILLINE1 as string,",
				"          P_A_MAILLINE2 as string,",
				"          P_A_CITY as string,",
				"          P_A_STATE as string,",
				"          P_A_POSTALCODE as string,",
				"          P_A_COUNTY as string,",
				"          P_A_PHONE as string,",
				"          P_A_CELLPHONE as string,",
				"          P_A_FAX as string,",
				"          P_A_TOLLFREENUMBER as string,",
				"          P_A_EMAIL as string,",
				"          S_A_COUNTRY as string,",
				"          S_A_MAILLINE1 as string,",
				"          S_A_MAILLINE2 as string,",
				"          S_A_CITY as string,",
				"          S_A_STATE as string,",
				"          S_A_POSTALCODE as string,",
				"          S_A_COUNTY as string,",
				"          S_A_PHONE as string,",
				"          S_A_CELLPHONE as string,",
				"          S_A_FAX as string,",
				"          S_A_TOLLFREENUMBER as string,",
				"          S_A_EMAIL as string,",
				"          CHECK_SUM as string,",
				"          CHANGE_CODE as string,",
				"          batch_id as string,",
				"          createDateTime as timestamp,",
				"          createdBy as string,",
				"          lastUpdateDateTime as timestamp,",
				"          lastUpdatedBy as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['batch_id','SOURCE_KEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SOURCE_SYSTEM,",
				"          SOURCE_KEY,",
				"          PERSON_TECHID,",
				"          FNAME,",
				"          MNAME1,",
				"          MNAME2,",
				"          LNAME,",
				"          NAMESUFFIX,",
				"          DOB,",
				"          GENDER,",
				"          SSN,",
				"          P_A_COUNTRY,",
				"          P_A_MAILLINE1,",
				"          P_A_MAILLINE2,",
				"          P_A_CITY,",
				"          P_A_STATE,",
				"          P_A_POSTALCODE,",
				"          P_A_COUNTY,",
				"          P_A_PHONE,",
				"          P_A_CELLPHONE,",
				"          P_A_FAX,",
				"          P_A_TOLLFREENUMBER,",
				"          P_A_EMAIL,",
				"          S_A_COUNTRY,",
				"          S_A_MAILLINE1,",
				"          S_A_MAILLINE2,",
				"          S_A_CITY,",
				"          S_A_STATE,",
				"          S_A_POSTALCODE,",
				"          S_A_COUNTY,",
				"          S_A_PHONE,",
				"          S_A_CELLPHONE,",
				"          S_A_FAX,",
				"          S_A_TOLLFREENUMBER,",
				"          S_A_EMAIL,",
				"          CHECK_SUM,",
				"          CHANGE_CODE,",
				"          batch_id,",
				"          createDateTime,",
				"          createdBy,",
				"          lastUpdateDateTime,",
				"          lastUpdatedBy,",
				"          TITLE",
				"     )) ~> sink1"
			]
		}
	}
}