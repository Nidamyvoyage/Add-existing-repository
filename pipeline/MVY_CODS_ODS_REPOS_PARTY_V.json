{
	"name": "MVY_CODS_ODS_REPOS_PARTY_V",
	"properties": {
		"activities": [
			{
				"name": "OnPrem_to_RAW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "MAX_LAST_TS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"additionalColumns": [
							{
								"name": "SWFDL_LOAD_ID",
								"value": {
									"value": "@variables('INGESTION_LOAD_ID')",
									"type": "Expression"
								}
							},
							{
								"name": "SWFDL_CREATED_BY",
								"value": {
									"value": "@{pipeline().Pipeline}",
									"type": "Expression"
								}
							},
							{
								"name": "SWFDL_CREATED_TS",
								"value": {
									"value": "@{formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss.fff')}",
									"type": "Expression"
								}
							},
							{
								"name": "SWFDL_UPDATED_BY",
								"value": {
									"value": "@{pipeline().Pipeline}",
									"type": "Expression"
								}
							},
							{
								"name": "SWFDL_UPDATED_TS",
								"value": {
									"value": "@{formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss.fff')}",
									"type": "Expression"
								}
							}
						],
						"oracleReaderQuery": {
							"value": "SELECT PARTY_ID, AS_OF_DATE, PARTY_TYPE, TIN, TIN_TYPE, DATE_OF_BIRTH, FULL_NAME, PREFIX_NAME, FIRST_NAME,MIDDLE_NAME, LAST_NAME, SUFFIX_NAME, GENDER, SOURCE_SYSTEM, SOURCE_SYSTEM_UNDERLYING, END_DATE FROM (SELECT ROW_NUMBER() OVER (PARTITION BY T.PARTY_ID ORDER BY T.END_DATE DESC) ACTIV_CNT,T.* FROM (SELECT  PARTY_ID,TO_CHAR(AS_OF_DATE,'YYYY-MM-DD') AS_OF_DATE,PARTY_TYPE,TIN,TIN_TYPE,TO_CHAR(DATE_OF_BIRTH,'YYYY-MM-DD') DATE_OF_BIRTH,FULL_NAME,PREFIX_NAME,FIRST_NAME,MIDDLE_NAME,LAST_NAME,SUFFIX_NAME,GENDER,SOURCE_SYSTEM,SOURCE_SYSTEM_UNDERLYING,TO_CHAR(END_DATE,'YYYY-MM-DD') END_DATE FROM ODS_REPOS.PARTY  WHERE UPDATED_TS between to_timestamp('@{variables('MAX_LAST_TS')}', 'YYYY-MM-DD\"T\"HH24:MI:SS.ff3\"Z\"') and to_timestamp('@{string(formatDateTime(convertFromUtc(pipeline().TriggerTime,'Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss.fff'))}', 'YYYY-MM-DD HH24:MI:SS.ff3\"Z\"')) T) WHERE ACTIV_CNT=1",
							"type": "Expression"
						},
						"partitionOption": "None",
						"convertDecimalToInteger": false,
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"path": {
								"value": "@concat(pipeline().parameters.BADRECORD_FOLDER,'/',pipeline().Pipeline,'/',pipeline().parameters.ENTITY_NAME,'/')",
								"type": "Expression"
							}
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CODS_Party",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SF_COMMON_STAGE1",
						"type": "DatasetReference",
						"parameters": {
							"SRC_SYS_NM": {
								"value": "@pipeline().parameters.SRC_SYS_NM",
								"type": "Expression"
							},
							"SRC_SCHEMA_NM": {
								"value": "@pipeline().parameters.SRC_SCHEMA_NM",
								"type": "Expression"
							},
							"ENTITY_NAME": {
								"value": "@pipeline().parameters.ENTITY_NAME",
								"type": "Expression"
							},
							"SF_STAGE_ROOT_DIR": {
								"value": "@pipeline().parameters.SF_STAGE_ROOT_DIR",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "RAW_FILE_LOAD_AUDIT",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "OnPrem_to_RAW",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "call MYVOYAGE_UNIT.MYVOYAGE_CLEANSED.PRC_MVY_ETL_RAW_AUDIT_LOAD(@{variables('INGESTION_LOAD_ID')},'@{pipeline().parameters.SRC_SYS_NM}','@{pipeline().parameters.ENTITY_NAME}','@{string(formatDateTime(convertFromUtc(pipeline().TriggerTime,'Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss.fff'))}','@{string(formatDateTime(addSeconds(activity('OnPrem_to_RAW').output.executionDetails[0].start,activity('OnPrem_to_RAW').output.copyDuration),'yyyy-MM-dd HH:mm:ss.fff'))}',@{activity('OnPrem_to_RAW').output.RowsRead},@{activity('OnPrem_to_RAW').output.rowsCopied})",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "LOAD_ID",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "RAW_FILE_TO_SF_STG_TABLE_LOAD",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "RAW_FILE_LOAD_AUDIT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": "COPY INTO \"MYVOYAGE_STAGE\".\"RS_CODS_REPOS_PARTY_STG\"(\"PARTY_ID\",\"AS_OF_DATE\",\"PARTY_TYPE\",\"TIN\",\"TIN_TYPE\",\"DATE_OF_BIRTH\",\"FULL_NAME\",\"PREFIX_NAME\",\"FIRST_NAME\",\n\"MIDDLE_NAME\",\"LAST_NAME\",\"SUFFIX_NAME\",\"GENDER\",\"SOURCE_SYSTEM\",\"SOURCE_SYSTEM_UNDERLYING\",\"END_DATE\",\n\"SWFDL_LOAD_ID\",\"SWFDL_CREATED_BY\",\"SWFDL_CREATED_TS\",\"SWFDL_UPDATED_BY\",\"SWFDL_UPDATED_TS\")\nFROM (select COALESCE($1,' '), COALESCE($2,' '), COALESCE($3,' '), COALESCE($4,' '), COALESCE($5,' '), COALESCE($6,' '), COALESCE($7,' '), COALESCE($8,' '), COALESCE($9,' '),\nCOALESCE($10,' '), COALESCE($11,' '), COALESCE($12,' '), COALESCE($13,' ') ,COALESCE($14,' '), COALESCE($15,' '),COALESCE($16,' '),$17,$18,$19,$20,$21\nfrom @MYVOYAGE_STAGE.EXT_STAGE_ADF_VESSTZUC1UNITEDM001/RS_CODS/REPOS/RS_CODS_REPOS_PARTY.csv (file_format => 'MYVOYAGE_CONFORM.MYCSVFMT_HDROFF')) FORCE = TRUE LOAD_UNCERTAIN_FILES = TRUE ON_ERROR = ABORT_STATEMENT;",
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "SNOWFLAKE_MYVOYAGE_STAGE",
						"type": "DatasetReference",
						"parameters": {
							"STG_TABLE_NAME": {
								"value": "@concat(pipeline().parameters.SRC_SYS_NM,'_',pipeline().parameters.SRC_SCHEMA_NM,'_',pipeline().parameters.ENTITY_NAME)",
								"type": "Expression"
							},
							"STG_SCHEMA_NAME": "MYVOYAGE_STAGE"
						}
					}
				}
			},
			{
				"name": "SF_STG_TABLE_LOAD_AUDIT",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "RAW_FILE_TO_SF_STG_TABLE_LOAD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "call MYVOYAGE_UNIT.MYVOYAGE_CLEANSED.PRC_MVY_ETL_STG_AUDIT_LOAD(@{variables('INGESTION_LOAD_ID')},'@{pipeline().parameters.SRC_SYS_NM}','@{pipeline().parameters.ENTITY_NAME}','@{string(formatDateTime(addSeconds(activity('OnPrem_to_RAW').output.executionDetails[0].start,activity('OnPrem_to_RAW').output.copyDuration),'yyyy-MM-dd HH:mm:ss.fff'))}','@{string(formatDateTime(addSeconds(addSeconds(activity('OnPrem_to_RAW').output.executionDetails[0].start,activity('OnPrem_to_RAW').output.copyDuration),int(string(mul(activity('RAW_FILE_TO_SF_STG_TABLE_LOAD').output.billingReference.billableDuration[0].duration,3600)))),'yyyy-MM-dd HH:mm:ss.fff'))}',@{activity('RAW_FILE_TO_SF_STG_TABLE_LOAD').output.firstRow.rows_parsed},@{activity('RAW_FILE_TO_SF_STG_TABLE_LOAD').output.firstRow.rows_loaded})",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "SNOWFLAKE_MYVOYAGE_CLEANSED",
						"type": "DatasetReference",
						"parameters": {
							"CLN_TABLE_NAME": {
								"value": "@concat(pipeline().parameters.SRC_SYS_NM,'_',pipeline().parameters.SRC_SCHEMA_NM,'_',pipeline().parameters.ENTITY_NAME,'_CLN')",
								"type": "Expression"
							},
							"CLN_SCHEMA_NAME": "MYVOYAGE_CLEANSED"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "STG_TO_CLN_LOAD",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SF_STG_TABLE_LOAD_AUDIT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "call MYVOYAGE_UNIT.MYVOYAGE_CLEANSED.PRC_MVY_ETL_STG_2_CLN_LOAD_INCREMENTAL('@{pipeline().parameters.SRC_SYS_NM}','@{pipeline().parameters.SRC_SCHEMA_NM}','@{pipeline().parameters.ENTITY_NAME}',@{variables('INGESTION_LOAD_ID')})",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "SNOWFLAKE_MYVOYAGE_CLEANSED",
						"type": "DatasetReference",
						"parameters": {
							"CLN_TABLE_NAME": {
								"value": "@concat(pipeline().parameters.SRC_SYS_NM,'_',pipeline().parameters.SRC_SCHEMA_NM,'_',pipeline().parameters.ENTITY_NAME,'_STG')",
								"type": "Expression"
							},
							"CLN_SCHEMA_NAME": "MYVOYAGE_CLEANSED"
						}
					}
				}
			},
			{
				"name": "GetLoadID",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "call MYVOYAGE_CLEANSED.PRC_MVY_GET_LOADID('@{pipeline().parameters.ENTITY_NAME}','@{pipeline().parameters.SRC_SYS_NM}','@{pipeline().parameters.SRC_SCHEMA_NM}')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "LOAD_ID",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "LOAD_ID_ASSIGN_NEW",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetLoadID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "INGESTION_LOAD_ID",
					"value": {
						"value": "@string(activity('GetLoadID').output.firstRow.PRC_MVY_GET_LOADID)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Move_File_To_ADLS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "STG_TO_CLN_LOAD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SF_COMMON_STAGE",
						"type": "DatasetReference",
						"parameters": {
							"SRC_SYS_NM": {
								"value": "@pipeline().parameters.SRC_SYS_NM",
								"type": "Expression"
							},
							"SRC_SCHEMA_NM": {
								"value": "@pipeline().parameters.SRC_SCHEMA_NM",
								"type": "Expression"
							},
							"ENTITY_NAME": {
								"value": "@pipeline().parameters.ENTITY_NAME",
								"type": "Expression"
							},
							"SF_STAGE_ROOT_DIR": {
								"value": "@pipeline().parameters.SF_STAGE_ROOT_DIR",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ADLS_ARCHIVE_FILE",
						"type": "DatasetReference",
						"parameters": {
							"SRC_SYS_NM": {
								"value": "@pipeline().parameters.SRC_SYS_NM",
								"type": "Expression"
							},
							"SCHEMA_NM": {
								"value": "@pipeline().parameters.SRC_SCHEMA_NM",
								"type": "Expression"
							},
							"ENTITY_NM": {
								"value": "@pipeline().parameters.ENTITY_NAME",
								"type": "Expression"
							},
							"LOB": {
								"value": "@pipeline().parameters.LOB",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DeleteFile",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Move_File_To_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SF_COMMON_STAGE",
						"type": "DatasetReference",
						"parameters": {
							"SRC_SYS_NM": {
								"value": "@pipeline().parameters.SRC_SYS_NM",
								"type": "Expression"
							},
							"SRC_SCHEMA_NM": {
								"value": "@pipeline().parameters.SRC_SCHEMA_NM",
								"type": "Expression"
							},
							"ENTITY_NAME": {
								"value": "@pipeline().parameters.ENTITY_NAME",
								"type": "Expression"
							},
							"SF_STAGE_ROOT_DIR": {
								"value": "@pipeline().parameters.SF_STAGE_ROOT_DIR",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_dfs_vesstzuc1unitedm001",
							"type": "LinkedServiceReference"
						},
						"path": "snowflakeextstaging/Archive/Retirement"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "GET_MAX_LAST_TS",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LOAD_ID_ASSIGN_NEW",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "call MYVOYAGE_CLEANSED.GET_MAX_PREV_TS(@{variables('INGESTION_LOAD_ID')},'@{pipeline().parameters.ENTITY_NAME}','@{pipeline().parameters.SRC_SYS_NM}','@{pipeline().parameters.SRC_SCHEMA_NM}')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand",
							"additionalFormatOptions": {
								"TIMESTAMP_FORMAT": "'YYYY-MM-DD HH24:MI'"
							}
						}
					},
					"dataset": {
						"referenceName": "MDM_ETL_AUDIT",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "MAX_LAST_TS",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GET_MAX_LAST_TS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "MAX_LAST_TS",
					"value": {
						"value": "@activity('GET_MAX_LAST_TS').output.value[0].GET_MAX_PREV_TS",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"ENTITY_NAME": {
				"type": "string",
				"defaultValue": "PARTY"
			},
			"SRC_SYS_NM": {
				"type": "string",
				"defaultValue": "RS_CODS"
			},
			"INGESTION_LOAD_TS": {
				"type": "string"
			},
			"INGESTION_ETL_TYPE": {
				"type": "string",
				"defaultValue": "INCREMENTAL"
			},
			"SRC_SCHEMA_NM": {
				"type": "string",
				"defaultValue": "REPOS"
			},
			"SF_STAGE_ROOT_DIR": {
				"type": "string",
				"defaultValue": "snowflakeextstaging"
			},
			"ADLS_LANDING_ROOT_DIR": {
				"type": "string",
				"defaultValue": "vesstzuc1unitedm001/landing/landing"
			},
			"LOB": {
				"type": "string",
				"defaultValue": "rs"
			},
			"SNOWFLAKE_EXT_STAGE_DIR": {
				"type": "string",
				"defaultValue": "@MYVOYAGE_STAGE.EXT_STAGE_ADF_VESSTZUC1UNITEDM001"
			},
			"BADRECORD_FOLDER": {
				"type": "string",
				"defaultValue": "snowflakeextstaging/BadRecords"
			}
		},
		"variables": {
			"INGESTION_LOAD_ID": {
				"type": "String"
			},
			"MAX_LAST_TS": {
				"type": "String"
			}
		},
		"folder": {
			"name": "DataConsolidationR2/729142/Test"
		},
		"annotations": [],
		"lastPublishTime": "2022-12-21T17:47:44Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}